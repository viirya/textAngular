
express = require('express')
stylus = require('stylus')
nib = require('nib')
util = require('util')
fs = require('fs')
marked = require('marked')

app = express()

compile = (str, path) ->
    return stylus(str).set('filename', path).use(nib())

app.set('views', __dirname + '/views')
app.set('view engine', 'jade')
app.set('view options', { layout: false })
app.use(express.logger())
app.use(express.bodyParser())
app.use(express.cookieParser())
app.use(express.session(secret: "moe"))

app.use(stylus.middleware { src: __dirname + '/public', compile: compile})
app.use(express.static(__dirname + '/public'))

allowCrossDomain = (req, res, next) ->
    console.log('allowCrossDomain')

    res.header('Access-Control-Allow-Origin', '*')
    res.header('Access-Control-Allow-Methods', 'POST, OPTIONS')
    res.header('Access-Control-Allow-Headers', 'Accept, Content-Type')

    next!


(error, req, res, next) <- app.use!
    console.log(error)
    res.send(500, {error: util.inspect(error)})

app.options('/api', allowCrossDomain)

app.post('/api', allowCrossDomain)

(req, res) <- app.post('/api', _)

    console.log(req.body.markdownstr);
    (err, parsed) <- marked(req.body.markdownstr, {}, _)
        if (err)
            console.log(err)
        else
            res.send({html: parsed})

app.listen(8080)


